name: Build CMake + Ninja

on:
  workflow_dispatch:
    inputs:
      version:
        description: CMake Version
        required: true

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      ANDROID_HOME: /opt/termux/android-sdk
      NDK: /opt/termux/android-ndk
      CMAKE_VERSION: ${{ github.event.inputs.version }}
      TERMUX_BASE_PREFIX: /data/data/com.itsaky.androidide/files
      TERMUX_PREFIX: /data/data/com.itsaky.androidide/files/usr
      TERMUX_HOME: /data/data/com.itsaky.androidide/files/home
    strategy:
      matrix:
        target_arch:
          - aarch64
      fail-fast: false

    steps:
      - name: Clone repository
        uses: actions/checkout@v3
        
      - name: Get packages from termux-packages
        uses: actions/checkout@v3
        with:
          repository: termux/termux-packages
          path: termux-packages

      - name: Add cmake-portable package
        run: |
          sed -i "s/CMAKE_VER/$CMAKE_VERSION/g" cmake-portable/build.sh
          cp -r cmake-portable termux-packages/packages

      - name: Build cmake-${{ matrix.target_arch }}
        working-directory: ./termux-packages
        run: |
          ./scripts/run-docker.sh ./build-package.sh -a ${{ matrix.target_arch }} -I cmake-portable

      - name: Build ninja-${{ matrix.target_arch }}
        working-directory: ./termux-packages
        run: |
          rm ./packages/ninja/build.sh
          cp ninja/build.sh ./packages/ninja/build.sh
          ./scripts/run-docker.sh ./build-package.sh -a ${{ matrix.target_arch }} -I ninja
     
      - name: Merge CMake and Ninja
        run: |
          cd ./termux-packages/output
          find -name "*.deb" -exec dpkg -x '{}' debs \;
          cd ./../../
          cp --remove-destination ./termux-packages/LICENSE.md ./termux-packages/output/debs/data/data/com.termux/files/usr/share/doc/ninja/LICENSE
          cd ./termux-packages/output
          mkdir dist
          cp -r debs/data/data/com.termux/files/usr/ dist/"$CMAKE_VERSION"
      
      - name: Upload artifact
        uses: actions/upload-artifact@v1
        with:
          name: cmake-${{ env.CMAKE_VERSION }}-${{ matrix.target_arch }}
          path: ./termux-packages/output/dist
