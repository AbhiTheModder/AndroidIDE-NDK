name: Build cmake + ninja

on:
  workflow_dispatch:
    inputs:
      version:
        description: 'CMake Version'
        required: false

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      ANDROID_HOME: "/opt/termux/android-sdk"
      NDK: "/opt/termux/android-ndk"

    strategy:
      matrix:
        target_arch: [aarch64]
      fail-fast: false

    steps:
      - name: Clone repository
        uses: actions/checkout@v3
       
      - name: Get packages from termux-packages
        uses: actions/checkout@v3
        with:
          repository: termux/termux-packages
          path: termux-packages

      - name: Add cmake-portable package
        env:
          CMAKE_VERSION: ${{ github.event.inputs.version }}
        run: |
          cp -r cmake-portable termux-packages/packages

      - name: Build cmake-${{ matrix.target_arch }}
        working-directory: ./termux-packages
        run:  | 
          ./scripts/run-docker.sh ./build-package.sh -a ${{ matrix.target_arch }} -I cmake-portable

      - name: Build ninja-${{ matrix.target_arch }}
        working-directory: ./termux-packages
        run: |
          ./scripts/run-docker.sh ./build-package.sh -a ${{ matrix.target_arch }} -I ninja

      - name: Merge cmake and ninja
        run: |
          cd ./termux-packages/output
          find -name "*.deb" -exec dpkg -x '{}' debs \;
          cp LICENSE ./termux-packages/output/debs/data/data/com.termux/files/usr/share/doc/ninja
          cp -r ./termux-packages/output/debs/data/data/com.termux/files/usr/ ./termux-packages/output/"$CMAKE_VERSION"
         
      - name: Upload cmake and ninja-${{ matrix.target_arch }}
        uses: actions/upload-artifact@v1
        with:
          name: cmake-$CMAKE_VERSION-${{ matrix.target_arch }}
          path: ./termux-packages/output/$CMAKE_VERSION